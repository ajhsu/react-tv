// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders without crashing 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="App"
>
    <div
        className="App-header"
    >
        <img
            alt="logo"
            className="App-logo"
            src="logo.svg"
        />
        <h2>
            React TV
        </h2>
    </div>
    <p
        className="App-intro"
    >
        To get started, edit 
        <code>
            src/App.js
        </code>
         and save to reload.
    </p>
    <iframe
        allowFullScreen={true}
        frameBorder="0"
        height="360"
        src="https://www.youtube.com/embed/2J5GzHoKl1Q?autoplay=1"
        width="640"
    />
</div>,
  "nodes": Array [
    <div
      className="App"
>
      <div
            className="App-header"
      >
            <img
                  alt="logo"
                  className="App-logo"
                  src="logo.svg"
            />
            <h2>
                  React TV
            </h2>
      </div>
      <p
            className="App-intro"
      >
            To get started, edit 
            <code>
                  src/App.js
            </code>
             and save to reload.
      </p>
      <iframe
            allowFullScreen={true}
            frameBorder="0"
            height="360"
            src="https://www.youtube.com/embed/2J5GzHoKl1Q?autoplay=1"
            width="640"
      />
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <App />,
      "_debugID": 11,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": App {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": Object {
          "currentVideoIndex": 0,
          "currentVideoSource": "https://www.youtube.com/embed/2J5GzHoKl1Q",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="App"
>
          <div
                    className="App-header"
          >
                    <img
                              alt="logo"
                              className="App-logo"
                              src="logo.svg"
                    />
                    <h2>
                              React TV
                    </h2>
          </div>
          <p
                    className="App-intro"
          >
                    To get started, edit 
                    <code>
                              src/App.js
                    </code>
                     and save to reload.
          </p>
          <iframe
                    allowFullScreen={true}
                    frameBorder="0"
                    height="360"
                    src="https://www.youtube.com/embed/2J5GzHoKl1Q?autoplay=1"
                    width="640"
          />
</div>,
        "_debugID": 12,
        "_renderedOutput": <div
          className="App"
>
          <div
                    className="App-header"
          >
                    <img
                              alt="logo"
                              className="App-logo"
                              src="logo.svg"
                    />
                    <h2>
                              React TV
                    </h2>
          </div>
          <p
                    className="App-intro"
          >
                    To get started, edit 
                    <code>
                              src/App.js
                    </code>
                     and save to reload.
          </p>
          <iframe
                    allowFullScreen={true}
                    frameBorder="0"
                    height="360"
                    src="https://www.youtube.com/embed/2J5GzHoKl1Q?autoplay=1"
                    width="640"
          />
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <App />,
}
`;
